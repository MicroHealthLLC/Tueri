pipeline {
    agent { label 'docker-agent' }

    environment {
        REMOTE_HOST = 'automation@192.168.14.213'
        APP_DIR = '/opt/maiko-llmguard/'
        AWS_CREDENTIALS = credentials('aws-ecr-creds') // AWS credentials in Jenkins
        AWS_REGION = 'us-east-1'
        ECR_REGISTRY = '295669632222.dkr.ecr.us-east-1.amazonaws.com/microhealthllc'
        REPO_NAME = 'maiko-llmguard'
    }
    stages {
        stage('Login to AWS ECR') {
            steps {
                script {
                    // Configure AWS credentials and login to ECR
                    sh """
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
                    """
                }
            }
        }
        stage('Check Branch Main') {
            when {
                branch 'main'
            }
            stages {
                stage('Main - Build & Push Docker Image') {
                    steps {
                        sh """
                            echo 'Running steps for the release branch...'
                            docker build --rm -t ${REPO_NAME}:latest .
                            docker tag ${REPO_NAME}:latest ${ECR_REGISTRY}/${REPO_NAME}:latest
                            docker push ${ECR_REGISTRY}/${REPO_NAME}:latest
                        """
                    }
                }
            }
        }
        stage('Cleanup Docker System') {
            steps {
                sh """
                    docker system prune -af
                """
            }
        }
        stage('Deploy to Remote Server') {
            steps {
                sshagent(credentials: ['automation']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${REMOTE_HOST} '
                            echo Connected to remote host!
                            cd $APP_DIR
                            git pull origin main
                            sudo docker compose down
                            sudo docker compose up -d --build -d
                        '
                    """
                }
            }
        }
    }
}